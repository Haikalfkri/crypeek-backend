# Generated by Django 5.1.7 on 2025-07-04 04:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ADAUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ADAUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APTUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APTUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AVAXUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AVAXUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BCHUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BCHUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BNBUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BNBUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BTCUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BTCUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CryptoInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('link', models.URLField(max_length=512)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('source', models.CharField(max_length=255)),
                ('image', models.URLField(blank=True, null=True)),
                ('category', models.CharField(default='GENERAL', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CryptoNews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('sentiment', models.CharField(max_length=512)),
                ('image', models.URLField(blank=True, max_length=1024, null=True)),
                ('link', models.URLField(max_length=1024, unique=True)),
                ('published_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='CryptoSymbols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DOGEUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DOGEUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DOTUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DOTUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ETHUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ETHUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ICPUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ICPUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LINKUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LINKUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LTCUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LTCUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MATICUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MATICUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NEARUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NEARUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SHIBUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SHIBUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SOLUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SOLUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TONUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TONUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UNIUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UNIUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XLMUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XLMUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XRPUSDT',
            fields=[
                ('timestamp', models.DateTimeField(primary_key=True, serialize=False)),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('volume', models.FloatField()),
                ('close_time', models.BigIntegerField()),
                ('quote_asset_volume', models.FloatField()),
                ('num_trades', models.IntegerField()),
                ('taker_buy_base_vol', models.FloatField()),
                ('taker_buy_quote_vol', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XRPUSDTDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(unique=True)),
                ('open_price', models.FloatField(null=True)),
                ('high_price', models.FloatField(null=True)),
                ('low_price', models.FloatField(null=True)),
                ('close_price', models.FloatField(null=True)),
                ('volume_from', models.FloatField(null=True)),
                ('volume_to', models.FloatField(null=True)),
                ('market_cap', models.FloatField(null=True)),
                ('supply', models.FloatField(null=True)),
                ('max_supply', models.FloatField(null=True)),
                ('circulating_supply', models.FloatField(null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.role')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
